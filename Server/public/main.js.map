{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;AACuD;AACa;AACrB;AACsC;;;AACrF,MAAMI,MAAM,GAAW,CACrB;EAAEC,IAAI,EAAE,EAAE;EAAEC,SAAS,EAAEH,8FAAkB;EACzCI,QAAQ,EAAE,CAAC;IACTF,IAAI,EAAE,EAAE;IACRC,SAAS,EAAEL,6EAAcA;GAC1B;AAAC,CAAC,EAEH;EACEI,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEJ,wDAAY;EACvBK,QAAQ,EAAE,CACR;IACEF,IAAI,EAAE,QAAQ;IACdG,YAAY,EAAE,MAAM,wJAA4B,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU;GACxE;CAGJ,CAEF;AAQK,MAAOC,gBAAgB;AAAhBA,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;QAAhBA;AAAgB;AAAhBA,gBAAgB;YALjBZ,iEAAoB,CAACI,MAAM,EAAC;IACpCU,OAAO,EAAC;GACT,CAAC,EACQd,yDAAY;AAAA;;sHAEXY,gBAAgB;IAAAG,UAAAA,yDAAAA;IAAAC,UAFjBhB,yDAAY;EAAA;AAAA;;;;;;;;;;;;;;;;;;;ACvBlB,MAAOE,YAAY;EALzBe;IAME,UAAK,GAAG,gBAAgB;;;AADbf,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAgB;EAAAC;EAAAC;EAAAC;IAAA;MCPzBC,uDAAAA,oBAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCyB;AACZ;AACG;AACqB;AAChB;AAGc;AACa;AACpB;AACX;AACF;AACJ;AACM;AACA;AACJ;AACU;AACA;AACV;AACI;AACM;AACF;AACR;AACU;AACA;AAEM;AAEd;AACM;AACN;AACQ;AACV;AACF;AACkB;AACP;AACgC;AACtC;AACW;;AAuDpD,MAAOkC,SAAS;AAATA,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;QAATA,SAAS;EAAAC,YALRtD,8FAAkB;AAAA;AAKnBqD,SAAS;aAVT,CACT3B,oEAAc,EACduB,qEAAe,EACfC,8DAAW,CACZ;EAAAtC,UArCCwC,oEAAa,EACbD,yDAAY,EACZ1C,iEAAgB,EAChBgB,0FAAuB,EACvBJ,wDAAY,EACZM,2DAAa,EACbL,+DAAe,EACfC,wDAAW,EACXC,gEAAmB,EACnBI,yDAAY,EACZC,qDAAU,EACVc,yDAAY,EACZC,+DAAe,EACfC,2DAAa,EACbzB,yDAAY,EACZ0B,mEAAiB,EACjBC,uDAAW,EACXC,uDAAW,EACXjB,6DAAc,EACdC,yDAAY,EACZC,mEAAiB,EACjBC,mEAAiB,EACjBC,yDAAY,EACZC,6DAAc,EACdC,mEAAiB,EACjBC,iEAAgB,EAChBC,yDAAY,EACZC,mEAAiB,EACjBC,mEAAiB,EACjBC,uEAAmB,EACnBZ,6DAAc,EASNP,wDAAW,EACnBC,gEAAmB;AAAA;;sHAGV6B,SAAS;IAAAE,eAjDlBzD,6EAAc,EACdE,8FAAkB;IAAAY,UAKlBwC,oEAAa,EACbD,yDAAY,EACZ1C,iEAAgB,EAChBgB,0FAAuB,EACvBJ,wDAAY,EACZM,2DAAa,EACbL,+DAAe,EACfC,wDAAW,EACXC,gEAAmB,EACnBI,yDAAY,EACZC,qDAAU,EACVc,yDAAY,EACZC,+DAAe,EACfC,2DAAa,EACbzB,yDAAY,EACZ0B,mEAAiB,EACjBC,uDAAW,EACXC,uDAAW,EACXjB,6DAAc,EACdC,yDAAY,EACZC,mEAAiB,EACjBC,mEAAiB,EACjBC,yDAAY,EACZC,6DAAc,EACdC,mEAAiB,EACjBC,iEAAgB,EAChBC,yDAAY,EACZC,mEAAiB,EACjBC,mEAAiB,EACjBC,uEAAmB,EACnBZ,6DAAc;IAAAjB,UASNU,wDAAW,EACnBC,gEAAmB;EAAA;AAAA;;;;;;;;;;;;;;;;;;;ACpFjB,MAAOxB,kBAAkB;AAAlBA,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAe;EAAAC;EAAAC;EAAAC;IAAA;MCP/BC,uDAAAA,oBAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACG+B;;;;;;;;;;;;ICiB1DA,uDAAAA,UAEM;;;;;IAINA,uDAAAA,UAAiF;;;;;;;;;;ADd/E,MAAOsC,eAAe;EAM1B3C,YAES4C,iBAAmC,EAClCC,WAA2B,EAC5BC,KAAuB;IAFvB,sBAAiB,GAAjBF,iBAAiB;IAChB,gBAAW,GAAXC,WAAW;IACZ,UAAK,GAALC,KAAK;IAGV,IAAI,CAACC,KAAK,GAAG,IAAI,CAACH,iBAAiB,CAACI,QAAQ,EAAE;IAC9C,IAAI,CAACC,aAAa,GAAG,IAAI,CAACL,iBAAiB,CAACM,OAAO,EAAE;EAEvD;EAEF,IAAIC,IAAI;IACN,OAAO,IAAI,CAACN,WAAW,CAACM,IAAI;EAE9B;EACAC,QAAQ;IACJ,IAAI,CAACC,KAAK,GAAG,CAET;MAACC,KAAK,EAAE,QAAQ;MAAEC,IAAI,EAAE,YAAY;MAAEC,UAAU,EAAE,CAAC,QAAQ;IAAC,CAAE,EAC9D;MAACC,SAAS,EAAC;IAAI,CAAC,EAChB;MAACH,KAAK,EAAE,MAAM;MAAEC,IAAI,EAAE,gBAAgB;MAAGG,OAAO,EAAE,MAAM,IAAI,CAACC,MAAM,EAAE;MAAGH,UAAU,EAAE,CAAC,EAAE;IAAC,CAAE,CAE7F;EACL;EACAG,MAAM;IAEJ,IAAI,CAACb,KAAK,CAACa,MAAM,EAAE;EACrB;;AAlCWhB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAA1C;EAAA2D;IAAA;gEACflB,mEAAe;;;;;;;;;;;;MCZ5BrC,4DAAAA,aAAc;MAGFA,uDAAAA,eAAqB;MAEzBA,0DAAAA,EAAM;MACNA,4DAAAA,WAAM;MAAAA,oDAAAA,GAAuB;MAAAA,0DAAAA,EAAO;MACpCA,4DAAAA,aAAyB;MACrBA,uDAAAA,kBAEO;MAGXA,0DAAAA,EAAM;MAKdA,4DAAAA,UAAK;MACDA,wDAAAA,qDAEM;MACVA,0DAAAA,EAAM;MACNA,uDAAAA,kBAAyB;MACzBA,4DAAAA,WAAK;MACDA,wDAAAA,qDAAiF;MACrFA,0DAAAA,EAAM;MAENA,uDAAAA,qBAA+B;;;MAtBjBA,uDAAAA,GAAuB;MAAvBA,gEAAAA,iCAAuB;MAGzBA,uDAAAA,GAA6E;MAA7EA,wDAAAA,CAAAA,6DAAAA,SAA6E;MAE/CA,uDAAAA,GAAoB;MAApBA,wDAAAA,oBAAoB;MAQpDA,uDAAAA,GAAmE;MAAnEA,wDAAAA,8EAAmE;MAMnEA,uDAAAA,GAAmE;MAAnEA,wDAAAA,8EAAmE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBqB;AAG9B;AAKJ;;;;;;;;;;;;;;ICWtCA,4DAAAA,gBACC;IAAAA,oDAAAA,gDAAoC;IAAAA,0DAAAA,EAAQ;;;;;IAC7CA,4DAAAA,gBAA0G;IAAAA,oDAAAA,oDAA6C;IAAAA,0DAAAA,EAAQ;;;;;IAJjKA,4DAAAA,UAAqD;IAEnDA,wDAAAA,wEAC6C;IAC7CA,wDAAAA,wEAA+J;IACjKA,0DAAAA,EAAM;;;;IAHIA,uDAAAA,GAA+C;IAA/CA,wDAAAA,4GAA+C;IAE/CA,uDAAAA,GAA2D;IAA3DA,wDAAAA,mIAA2D;;;;;IAejEA,4DAAAA,gBACG;IAAAA,oDAAAA,wDAAuC;IAAAA,0DAAAA,EAAQ;;;;;IAChDA,4DAAAA,gBACC;IAAAA,oDAAAA,6CAAiC;IAAAA,0DAAAA,EAAQ;;;;;IAJhDA,4DAAAA,UAAqD;IACjDA,wDAAAA,wEACkD;IAChDA,wDAAAA,wEAC0C;IAChDA,0DAAAA,EAAM;;;;IAJMA,uDAAAA,GAA6D;IAA7DA,wDAAAA,wIAA6D;IAE3DA,uDAAAA,GAA8D;IAA9DA,wDAAAA,yIAA8D;;;;;;IArCpGA,4DAAAA,iBAAkE;IAITA,oDAAAA,0BAAc;IAAAA,0DAAAA,EAAK;IAE5DA,4DAAAA,cAAsD;IAAxBA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAAYA,yDAAAA,kBAAU;IAAA,EAAC;IACjDA,4DAAAA,aAAoB;IACUA,oDAAAA,cAAO;IAAAA,0DAAAA,EAAQ;IACzCA,uDAAAA,iBAKE;IAEFA,wDAAAA,+DAKM;IAERA,0DAAAA,EAAM;IAENA,4DAAAA,cAAmB;IACeA,oDAAAA,uBAAU;IAAAA,0DAAAA,EAAQ;IAClDA,uDAAAA,iBAME;IACFA,wDAAAA,+DAKM;IAERA,0DAAAA,EAAM;IACNA,4DAAAA,eAA2C;IAEGA,wDAAAA;MAAAA,2DAAAA;MAAA;MAAA,OAASA,yDAAAA,kBAAU;IAAA,EAAC;IAAeA,oDAAAA,2BAAc;IAAAA,0DAAAA,EAAS;;;;IAtCxGA,uDAAAA,GAAuB;IAAvBA,wDAAAA,+BAAuB;IAUfA,uDAAAA,GAA4C;IAA5CA,wDAAAA,8DAA4C;IAkB5CA,uDAAAA,GAA4C;IAA5CA,wDAAAA,8DAA4C;;;ADpBpE,MAAOrB,cAAc;EAGzBgB,YACW+D,YAAyB,EACzBC,cAA8B,EAC9BC,eAA+B,EAChCrB,iBAAmC,EAClCsB,MAAc;IAJd,iBAAY,GAAZH,YAAY;IACZ,mBAAc,GAAdC,cAAc;IACd,oBAAe,GAAfC,eAAe;IAChB,sBAAiB,GAAjBrB,iBAAiB;IAChB,WAAM,GAANsB,MAAM;IAOf,cAAS,GAAG,IAAI,CAACH,YAAY,CAACI,KAAK,CAAC;MACpCC,YAAY,EAAG,CAAC,EAAE,EAAC,CAACP,+DAAmB,EAAEA,gEAAoB,CAAC,CAAC,CAAC,CAAC,CAAC;MAClEU,eAAe,EAAE,CAAC,EAAE,EAAC,CAACV,+DAAmB,EAAEA,gEAAoB,CAAC,EAAE,CAAC,CAAC;KAErE,CAAC;EATI;EAUNY,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAC,IAAI,CAACC,SAAS,CAACC,KAAK,CAAC;IAClD,IAAG,IAAI,CAACD,SAAS,CAACE,OAAO,EAAC;MACxB,IAAI,CAACd,cAAc,CAACe,GAAG,CAAC;QAACC,QAAQ,EAAC,OAAO;QAAEC,OAAO,EAAC,uBAAuB;QAAEC,MAAM,EAAC;MAAqC,CAAC,CAAC;KAC3H,MAAI;MACHR,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAE,IAAI,CAACC,SAAS,CAACC,KAAK,CAACT,YAAY,CAAC;MAClF,IAAI,CAACe,aAAa,CAAE,IAAI,CAACP,SAAS,CAACC,KAAK,CAACT,YAAY,EAAG,IAAI,CAACQ,SAAS,CAACC,KAAK,CAACN,eAAe,CAAC;;EAElG;EAEA,IAAIa,IAAI;IACN,OAAO,IAAI,CAACR,SAAS,CAACS,QAAQ;EAChC;EAEMF,aAAa,CAACG,OAAoC,EAAEC,UAAuC;IAAA;IAAA;MAC/Fb,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEW,OAAO,EAAG,YAAY,EAAGC,UAAU,CAAC;MAE3D,IAAIC,iBAAiB,GAAG,IAAI1B,8EAAY,CAACwB,OAAO,EAAGC,UAAU,CAAE;MAC/Db,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEa,iBAAiB,CAAC;MAC7C,KAAI,CAACvB,eAAe,CAACkB,aAAa,CAACK,iBAAiB,CAAE,CAACC,SAAS,CAAC;QAC/DC,IAAI,EAAIC,IAAkB,IAAK;UAE7B,IAAIC,YAAY,GAAiBD,IAAI;UACrC,IAAIC,YAAY,CAACC,MAAM,IAAI,CAAC,EAAE;YAC5BnB,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEiB,YAAY,CAACE,OAAO,CAAC;YACzC,KAAI,CAAC9B,cAAc,CAACe,GAAG,CAAC;cAACC,QAAQ,EAAC,OAAO;cAAEC,OAAO,EAAC,OAAO;cAAEC,MAAM,EAACU,YAAY,CAACE;YAAO,CAAC,CAAC;WAC1F,MAAM;YAEL,KAAI,CAACR,OAAO,GAAYM,YAAY,CAACG,OAAO;YAE5C;YACA,KAAI,CAACnD,iBAAiB,CAACoD,SAAS,CAAC,KAAI,CAACV,OAAO,CAAC;YAC9C,KAAI,CAAC1C,iBAAiB,CAACqD,OAAO,CAACL,YAAY,CAAC7C,KAAK,CAAC;YAClD,KAAI,CAACmB,MAAM,CAACgC,QAAQ,CAAC,CAAC,0BAA0B,CAAC,CAAC;WACnD,CAAC;QAEJ,CAAC;;QACCC,KAAK,EAAIA,KAAK,IAAI;UAChB,IAAIL,OAAO,GAAQK,KAAK;UACxB,KAAI,CAACC,aAAa,CAACC,MAAM,CAAC,OAAO,EAAE,EAAE,EAAEP,OAAO,CAACQ,OAAO,EAAE,EAAE,CAAC;QAC7D;OACD,CAAC;IAAC;EAEP;;AA/DWtH,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAiB;EAAA2D;IAAA;gEACdlB,0EAAe;;;;;;;;;;;;MCf5BrC,wDAAAA,2DAuDU;MAEVA,uDAAAA,iBAAwC;;;MAzD5BA,wDAAAA,8CAAsC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACS5C,MAAOkG,aAAa;EAMvBvG,YACWwG,aAA4B,EAC7B5D,iBAAmC;IADlC,kBAAa,GAAb4D,aAAa;IACd,sBAAiB,GAAjB5D,iBAAiB;IAN3B,oBAAe,GAAY,KAAK;IAChC,UAAK,GAAe,IAAI6D,KAAK,EAAE;IAM5B,IAAI,CAACxD,aAAa,GAAG,IAAI,CAACL,iBAAiB,CAACM,OAAO,EAAE;EACxD;EACAE,QAAQ;IACL,IAAI,CAACsD,WAAW,EAAE;IAClBhC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAE,IAAI,CAAC1B,aAAa,CAAC;EAEzD;EAEAyD,WAAW;IACR,IAAI,CAACF,aAAa,CAACG,MAAM,GAAG,IAAI;IAChCjC,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAE,IAAI,CAAC1B,aAAa,CAAC2D,KAAK,CAAC;IAG5E,IAAI,CAACvD,KAAK,CAACwD,IAAI,CACZ;MACGvD,KAAK,EAAE,aAAa;MACpBC,IAAI,EAAE,kBAAkB;MACxBC,UAAU,EAAE,CAAC,aAAa;KAC5B,EACD;MACGF,KAAK,EAAE,QAAQ;MACfC,IAAI,EAAE,aAAa;MACnBC,UAAU,EAAE,CAAC,QAAQ;KACvB,CACH;IACD,IAAI,IAAI,CAACP,aAAa,CAAC2D,KAAK,KAAK,KAAK,IAAI,IAAI,CAAC3D,aAAa,CAAC2D,KAAK,KAAK,KAAK,EAAE;MAC3E,IAAI,CAACvD,KAAK,CAACwD,IAAI,CAEZ;QACGvD,KAAK,EAAE,cAAc;QACrBC,IAAI,EAAE,aAAa;QACnBC,UAAU,EAAE,CAAC,cAAc;OAC7B,EACD;QACGF,KAAK,EAAE,WAAW;QAClBC,IAAI,EAAE,mBAAmB;QACzBF,KAAK,EAAE,CACJ;UACGC,KAAK,EAAE,UAAU;UACjBC,IAAI,EAAE,kBAAkB;UACxBC,UAAU,EAAE,CAAC,UAAU;SACzB,EACD;UACGF,KAAK,EAAE,cAAc;UACrBC,IAAI,EAAE,kBAAkB;UACxBC,UAAU,EAAE,CAAC,WAAW;SAC1B,EACD;UACGF,KAAK,EAAE,SAAS;UAChBC,IAAI,EAAE,eAAe;UACrBC,UAAU,EAAE,CAAC,UAAU;SACzB,EACD;UACGF,KAAK,EAAE,UAAU;UACjBC,IAAI,EAAE;SACR;OAEN,EACD;QACGD,KAAK,EAAE,YAAY;QACnBC,IAAI,EAAE;OACR,EACD;QACGD,KAAK,EAAE,UAAU;QACjBC,IAAI,EAAE;OACR,EACD;QACGD,KAAK,EAAE,eAAe;QACtBC,IAAI,EAAE,iBAAiB;QACvBC,UAAU,EAAE,CAAC,aAAa;OAC5B,CACH;;EAEP;;AAlFU+C,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAtG;EAAAC;EAAAC;EAAA2G;EAAA1G;IAAA;MCX1BC,4DAAAA,mBAAsF;MAA3EA,wDAAAA;QAAA;MAAA,EAA6B;MACpCA,4DAAAA,aAAyB;MACtBA,uDAAAA,aAAqE;MACpEA,4DAAAA,YAAgB;MAAAA,oDAAAA,iBAAU;MAAAA,0DAAAA,EAAK;MAC/BA,uDAAAA,SAAI;MACRA,0DAAAA,EAAM;MAENA,uDAAAA,qBACc;MAElBA,0DAAAA,EAAY;MAEZA,4DAAAA,kBAAoF;MAA5DA,wDAAAA;QAAA,6BAA2B,IAAI;MAAA,EAAC;MACxDA,0DAAAA,EAAW;;;MAbAA,wDAAAA,gCAA6B;MAOvBA,uDAAAA,GAAe;MAAfA,wDAAAA,oBAAe;;;;;;;;;;;;;;;;;;;;ACP1B,MAAOyD,YAAY;EACrB9D,YACW+G,QAAqC,EACrCC,GAAgC;IADhC,aAAQ,GAARD,QAAQ;IACR,QAAG,GAAHC,GAAG;EACZ;;;;;;;;;;;;;;;;;;;;ACFyD;;;;AAOzD,MAAO5E,WAAW;EAIpBpC,YACYkH,KAAiB,EACjBC,WAA4B;IAD5B,UAAK,GAALD,KAAK;IACL,gBAAW,GAAXC,WAAW;IAEnB,IAAI,CAACC,GAAG,GAAGH,sEAAe;EAC9B;EACAI,QAAQ,CAACC,MAAmB;IACxB5C,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAC2C,MAAM,CAAC;IAC1C,OAAO,IAAI,CAACH,WAAW,CAACI,eAAe,CAACD,MAAM,EAAE,IAAI,CAACF,GAAG,GAAG,WAAW,CAAC;EAC3E,CAAC;;AAbQhF,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAoF,SAAXpF,WAAW;AAAA;;;;;;;;;;;;;;;;;;;ACJmC;;;;AAIrD,MAAOD,eAAe;EAExBnC,YACYyH,IAAgB,EAChBN,WAA4B;IAD5B,SAAI,GAAJM,IAAI;IACJ,gBAAW,GAAXN,WAAW;IAEf,IAAI,CAACC,GAAG,GAAGH,yEAAe;EAC9B;EAEAS,SAAS,CAAC3E,KAAY;IAClB,OAAO,IAAI,CAACoE,WAAW,CAACQ,cAAc,CAAC,IAAI,CAACP,GAAG,GAAG,qBAAqB,EAACrE,KAAK,CAAC;EAClF;EACA6E,SAAS,CAAC7E,KAAY;IAClB,OAAO,IAAI,CAACoE,WAAW,CAACQ,cAAc,CAAC,IAAI,CAACP,GAAG,GAAG,kBAAkB,EAACrE,KAAK,CAAC;EAC/E;EACA8E,UAAU,CAAC9E,KAAY;IACnB,OAAO,IAAI,CAACoE,WAAW,CAACQ,cAAc,CAAC,IAAI,CAACP,GAAG,GAAG,oBAAoB,EAACrE,KAAK,CAAC;EACjF;EACA+E,OAAO,CAAC/E,KAAY;IAChB,OAAO,IAAI,CAACoE,WAAW,CAACQ,cAAc,CAAC,IAAI,CAACP,GAAG,GAAG,cAAc,EAACrE,KAAK,CAAC;EAC3E;EACAgF,QAAQ,CAAChF,KAAY;IACjB,OAAO,IAAI,CAACoE,WAAW,CAACQ,cAAc,CAAC,IAAI,CAACP,GAAG,GAAG,WAAW,EAACrE,KAAK,CAAC;EACxE;EACAiF,MAAM,CAACjF,KAAY;IACf,OAAO,IAAI,CAACoE,WAAW,CAACQ,cAAc,CAAC,IAAI,CAACP,GAAG,GAAG,SAAS,EAACrE,KAAK,CAAC;EACtE;EAEAkF,UAAU,CAACC,MAAqB;IAC5B,OAAO,IAAI,CAACf,WAAW,CAACI,eAAe,CAACW,MAAM,EAAE,IAAI,CAACd,GAAG,GAAG,aAAa,CAAC;EAC7E,CAAC;;AA9BIjF,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAqF,SAAfrF,eAAe;AAAA;;;;;;;;;;;;;;;;;;;;;;ACPiC;;;;;AAKvD,MAAOgG,gBAAgB;EAE3BnI,YACUyH,IAAgB,EAChBvD,MAAc,EACdkE,YAA0B;IAF1B,SAAI,GAAJX,IAAI;IACJ,WAAM,GAANvD,MAAM;IACN,iBAAY,GAAZkE,YAAY;IAEpB,IAAI,CAAChB,GAAG,GAAGH,sEAAe;EAE5B;EAGMjB,SAAS,CAACqC,GAAQ;IAAA;IAAA;MACtB,IAAIA,GAAG,EAAE;QACP,IAAI/C,OAAO,SAAS,KAAI,CAAC8C,YAAY,CAACE,YAAY,CAAC,cAAc,EAAED,GAAG,CAAC;QACvE;;IACD;EAEH;;EACMpC,OAAO,CAACsC,GAAW;IAAA;IAAA;MACvB,IAAIC,KAAK,SAAS,MAAI,CAACJ,YAAY,CAACE,YAAY,CAAC,OAAO,EAAEC,GAAG,CAAC;MAC9D;IAAA;EACF;;EACArF,OAAO;IAEL,OAAO,IAAI,CAACkF,YAAY,CAACK,YAAY,CAAC,cAAc,CAAC;IACrD;EACF;;EACAzF,QAAQ;IACN,OAAO,IAAI,CAACoF,YAAY,CAACK,YAAY,CAAC,OAAO,CAAC;IAC9C;EACF;;EACAC,WAAW;IACT,OAAO,IAAI,CAACN,YAAY,CAACK,YAAY,CAAC,UAAU,CAAC;IACjD;EACF;;EACAE,WAAW;IACT,OAAO,IAAI,CAAC3F,QAAQ,EAAE,KAAK,IAAI;EACjC;EACAW,MAAM;IACJ,OAAO,IAAI,CAACyE,YAAY,CAACQ,UAAU,EAAE;IACrC;IACA;IACA,IAAI,CAAC1E,MAAM,CAACgC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;EAC7B;EACA2C,cAAc,CAACC,MAAY;IACzB,IAAI,CAACV,YAAY,CAACE,YAAY,CAAC,UAAU,EAAEQ,MAAM,CAAC;EACpD;;AA/CWX,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAX,SAAhBW,gBAAgB;AAAA;;;;;;;;;;;;;;;;;;;ACFvB,MAAOY,YAAY;EAEvB/I,YAAoBgJ,cAA8B;IAA9B,mBAAc,GAAdA,cAAc;EAAoB;EACtD;EACAV,YAAY,CAACC,GAAW,EAAE1D,KAAU;IAClC,IAAI,CAACmE,cAAc,CAACC,aAAa,CAACC,OAAO,CAACX,GAAG,EAAE1D,KAAK,CAAC;EACvD;EACA;EACA4D,YAAY,CAACF,GAAW;IACtB,OAAO,IAAI,CAACS,cAAc,CAACC,aAAa,CAACE,OAAO,CAACZ,GAAG,CAAC;EACvD,CAAC;EACDK,UAAU;IACR,OAAO,IAAI,CAACI,cAAc,CAACC,aAAa,CAACG,KAAK,EAAE;EAClD;;AAbWL,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAvB,SAAZuB,YAAY;EAAAM,YAFX;AAAM;;;;;;;;;;;;;;;;;;ACHkB;;AAItC,MAAME,aAAa,GAAGC,mBAAO,CAAC,8BAAoB,CAAC;AACnD,MAAMC,UAAU,GAAG,QAAQ;AAIrB,MAAOC,cAAc;EAEzB1J;IACO,kBAAa,GAAG,IAAIuJ,aAAa,CAACI,YAAY,EAAE;MACrDC,IAAI,EAAE,SAASA,IAAI,CAACrB,GAAS;QAC3BA,GAAG,GAAGe,6CAAe,CAACf,GAAG,EAAE;UAACkB;QAAU,CAAC,CAAC;QAExC,OAAOlB,GAAG,CAACuB,QAAQ,EAAE;MACvB,CAAC;MACDC,OAAO,EAAE,SAASA,OAAO,CAACC,IAAU;QAClCA,IAAI,GAAGV,kDAAoB,CAACU,IAAI,EAAEP,UAAU,CAAC;QAE7CO,IAAI,GAAGA,IAAI,CAACF,QAAQ,EAAE;QAEtB,OAAOE,IAAI;MACb,CAAC;MACDE,OAAO,EAAE,SAASA,OAAO,CAACF,IAAU;QAClCA,IAAI,GAAGV,kDAAoB,CAACU,IAAI,EAAEP,UAAU,CAAC;QAE7CO,IAAI,GAAGA,IAAI,CAACF,QAAQ,CAACR,+CAAiB,CAAC;QAEvC,OAAOU,IAAI;MACb;KACD,CAAC;EArBc;;AAFLN,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAlC,SAAdkC,cAAc;EAAAL,YAFb;AAAM;;;;;;;;;;;;;;;;;;;;ACL2C;AAMrB;;;;AAKpC,MAAOzI,cAAc;EAIvB,IAAIuC,IAAI;IACJ,OAAO;MAAE,GAAG,IAAI,CAACL;IAAM,CAAE;EAC7B;EAEA9C,YACYkH,KAAiB,EACjBC,WAA4B;IAD5B,UAAK,GAALD,KAAK;IACL,gBAAW,GAAXC,WAAW;IAGnB,IAAI,CAACC,GAAG,GAAGH,sEAAe;EAC9B;EAIA9B,aAAa,CAACK,iBAAgC;IAC1C,OAAO,IAAI,CAAC2B,WAAW,CAACI,eAAe,CAAC/B,iBAAiB,EAAG,IAAI,CAAC4B,GAAG,GAAG,6BAA6B,CAAC,CACpGkD,IAAI,CACDD,mDAAG,CAAClH,IAAI,IAAI,IAAI,CAACL,KAAK,GAAGK,IAAI,CAAC4C,OAAO,CAAC,CAEzC;EACL,CAAC,CAAC;EACF2B,SAAS,CAAC3E,KAAY;IAClB,OAAO,IAAI,CAACoE,WAAW,CAACQ,cAAc,CAAC,IAAI,CAACP,GAAG,GAAG,qBAAqB,EAACrE,KAAK,CAAC;EAElF,CAAC,CAAC;EAEEwH,WAAW,CAACjD,MAAsB;IAClC,OAAO,IAAI,CAACH,WAAW,CAACI,eAAe,CAACD,MAAM,EAAE,IAAI,CAACF,GAAG,GAAG,cAAc,CAAC;EAC9E,CAAC;;AAhCQxG,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA4G,SAAd5G,cAAc;EAAAyI,YAFX;AAAM;;;;;;;;;;;;;;;;;ACTyC;;;AAIzD,MAAOoB,cAAc;EAEvBzK,YAAoBkH,KAAiB;IAAjB,UAAK,GAALA,KAAK;EAAe;EACjCK,eAAe,CAACmD,OAAY,EAAEtD,GAAW;IAC5C,IAAIuD,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC;IAClC,IAAII,MAAM,GAAG,OAAO,GAAGH,IAAI;IAC3B,IAAII,OAAO,GAAG,IAAIP,6DAAW,EAAE,CAACQ,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACvE,OAAO,IAAI,CAAC9D,KAAK,CAAC+D,IAAI,CAAC7D,GAAG,EAAEuD,IAAI,EAAE;MAAEI,OAAO,EAAEA;IAAO,CAAE,CAAC;EAC3D,CAAC,CAAC;EAEKpD,cAAc,CAAEP,GAAW,EAAGrE,KAAU;IAC3C,IAAIgI,OAAO,GAAG,IAAIP,6DAAW,CAAC;MAAE,cAAc,EAAE,kBAAkB;MAAE,eAAe,EAAE,IAAI,GAAGzH,KAAK,GAAG;IAAE,CAAE,CAAC;IACzG,OAAO,IAAI,CAACmE,KAAK,CAACgE,GAAG,CAAe9D,GAAG,EAAE;MAAE2D,OAAO,EAAEA;IAAO,CAAE,CAAC;EAClE,CAAC,CAAC;;AAbON,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAjD,SAAdiD,cAAc;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACL6B;AAEV;AACJ;AACU;AACF;AACN;AACM;AACE;AACI;AACI;AACJ;AACI;AACF;AACd;AAEsB;AACR;AACE;AACM;AAEF;AACT;AACK;AACW;AACvB;AACQ;AACV;AACQ;AACE;AACA;AACV;AACmB;AACnB;AACU;AACR;AAGN;AACI;AACF;AACQ;AAGL;AACA;AACL;;AAoEpC,MAAOlK,YAAY;AAAZA,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA;AAAY;AAAZA,YAAY;aAPZ,CAACkL,uDAAc,EACxBC,4DAAmB,EACnBvD,yEAAgB,EACfY,gEAAY,EACXA,gEAAY,EAAE0B,qEAAc,CAAC;EAAA3K,UAxD/Bf,yDAAY,EACZ4M,sEAAmB,EACnB9K,2DAAa,EACbiB,+DAAe,EACfE,mEAAiB,EACjB1B,yDAAY,EACZyB,2DAAa,EACbM,0DAAY,EAKZvB,yDAAY,EACZsK,qDAAU,EACV5K,+DAAe,EACfgL,qEAAkB,EAClB/K,wDAAW,EACX0K,mEAAgB,EAChBlK,6DAAc,EACdoK,uDAAW,EACX/J,6DAAc,EACdgK,+DAAe,EACf3J,mEAAiB,EACjB4J,uEAAmB,EACnBpK,mEAAiB,EACjBS,uEAAmB,EACnBpB,+DAAe,EACfyB,uDAAW,EAEX0J,sEAAmB,EACnB5J,2DAAa,EAEbX,mEAAiB,EACjBC,yDAAY,EACZE,mEAAiB,EACjBC,iEAAgB,EAChBC,yDAAY,EACZC,mEAAiB,EACjBpB,yDAAY,EACZ0B,mEAAiB,EACjBnB,2DAAa,EACbiB,+DAAe,EACfpB,gEAAmB,EACnBK,qDAAU,EACVc,yDAAY,EACZK,uDAAW,EACX0J,uDAAW;AAAA;;sHAaFrL,YAAY;IAAAkC,eAhErBC,mEAAe,EACfC,gFAAe,EACf4D,0EAAa;IAAAzG,UAGbf,yDAAY,EACZ4M,sEAAmB,EACnB9K,2DAAa,EACbiB,+DAAe,EACfE,mEAAiB,EACjB1B,yDAAY,EACZyB,2DAAa,EACbM,0DAAY;IAAAtC,UAGZ4C,gFAAe,EACf4D,0EAAa,EACbzF,yDAAY,EACZsK,qDAAU,EACV5K,+DAAe,EACfgL,qEAAkB,EAClB/K,wDAAW,EACX0K,mEAAgB,EAChBlK,6DAAc,EACdoK,uDAAW,EACX/J,6DAAc,EACdgK,+DAAe,EACf3J,mEAAiB,EACjB4J,uEAAmB,EACnBpK,mEAAiB,EACjBS,uEAAmB,EACnBpB,+DAAe,EACfyB,uDAAW,EACXS,mEAAe,EACfiJ,sEAAmB,EACnB5J,2DAAa,EAEbX,mEAAiB,EACjBC,yDAAY,EACZE,mEAAiB,EACjBC,iEAAgB,EAChBC,yDAAY,EACZC,mEAAiB,EACjBpB,yDAAY,EACZ0B,mEAAiB,EACjBnB,2DAAa,EACbiB,+DAAe,EACfpB,gEAAmB,EACnBK,qDAAU,EACVc,yDAAY,EACZK,uDAAW,EACX0J,uDAAW;EAAA;AAAA;;;;;;;;;;;;;;;;;;;ACjGmC;;;;;AAU5C,MAAOlJ,eAAe;EAE1B1C,YAAqB6L,oBAAyC,EAAU3H,MAAc;IAAjE,yBAAoB,GAApB2H,oBAAoB;IAA+B,WAAM,GAAN3H,MAAM;EAAa;EAE3Fd,QAAQ,IAER;EAEAiD,MAAM,CAAEyF,MAAc,EAAEC,MAAc,EAAEjG,OAAe,EAAEkG,KAAa;IACpE,IAAI,CAACH,oBAAoB,CAACI,OAAO,CAAC;MAC9B3F,OAAO,EAAER,OAAO;MAChBgG,MAAM,EAAEA,MAAM;MACdI,WAAW,EAAE,QAAQ;MACrBC,MAAM,EAAE,MAAK;QAAG,IAAI,CAACC,WAAW,CAAEJ,KAAK,CAAE;MAAE;KAC9C,CAAC;EACJ;EAEAK,KAAK,CAAEP,MAAc,EAAEC,MAAc,EAAEjG,OAAe,EAAEkG,KAAa,EAAEM,QAAe;IACpF,IAAI,CAACT,oBAAoB,CAACI,OAAO,CAAC;MAC9B3F,OAAO,EAAER,OAAO;MAChBgG,MAAM,EAAEA,MAAM;MACdI,WAAW,EAAE,UAAU;MACvBC,MAAM,EAAE,MAAK;QAAG,IAAI,CAACI,aAAa,CAAED,QAAQ,CAAE;MAAE;KACnD,CAAC;EACJ;EAGAnG,KAAK,CAAE2F,MAAc,EAAEC,MAAc,EAAEjG,OAAe,EAAEkG,KAAa;IACnE,IAAI,CAACH,oBAAoB,CAACI,OAAO,CAAC;MAC9B3F,OAAO,EAAER,OAAO;MAChBgG,MAAM,EAAEA,MAAM;MACdI,WAAW,EAAE,SAAS;MACtBC,MAAM,EAAE,MAAK;QAAG,IAAI,CAACC,WAAW,CAAEJ,KAAK,CAAE;MAAE;KAC9C,CAAC;EACJ;EAEOI,WAAW,CAAEJ,KAAa;IAC/B,IAAK,CAACA,KAAK,IAAIA,KAAK,IAAI,EAAE,EAAG;MAC3BA,KAAK,GAAG,IAAI;;IAEdA,KAAK,GAAG,GAAG,GAAGA,KAAK;IACnBQ,UAAU,CAAC;MAAaC,CAAC,CAACT,KAAK,CAAC,CAACU,KAAK,EAAE;IAAC,CAAC,EAAC,EAAE,CAAC;EAChD;EAGOH,aAAa,CAACD,QAAgB;IACnC,IAAGA,QAAQ,IAAI,GAAG,EAAC;MACjB,IAAI,CAACpI,MAAM,CAACgC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;;EAEpC;;AAjDWxD,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAzC;EAAA0M,WAAAA,gEAAAA,CAFd,CAACjB,4DAAmB,CAAC;EAAAxL;EAAAC;EAAAC;IAAA;MADtBC,uDAAAA,sBAAoC;;;;;;;;;;;;;;;;;;;;ACZjD;AACA;AACA;AACA;AAEO,MAAM4G,WAAW,GAAG;EACzB2F,UAAU,EAAE,KAAK;EACjBxF,GAAG,EAAE;CACN;;;;;;;;;;;;;;;ACN4C;AAG7CyF,sEAAAA,EAAwB,CAACC,eAAe,CAACvK,sDAAS,CAAC,CAChDwK,KAAK,CAACC,GAAG,IAAItI,OAAO,CAACyB,KAAK,CAAC6G,GAAG,CAAC,CAAC;;;;;;;;;;ACNnC","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/indexPrincipal/principal.component.ts","./src/app/components/indexPrincipal/principal.html","./src/app/components/inicio/inicio.component.ts","./src/app/components/inicio/inicio.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/menu/menu.component.ts","./src/app/components/menu/menu.component.html","./src/app/components/model/login.model.ts","./src/app/service/Area.service.ts","./src/app/service/CustomerService.ts","./src/app/service/auth-guard.service.ts","./src/app/service/local.service.ts","./src/app/service/storage.services.ts","./src/app/service/usuario.service.ts","./src/app/service/util-api.service.ts","./src/app/shared.module.ts","./src/app/util/alerta.component.ts","./src/environments/environment.ts","./src/main.ts","ignored|C:\\Mesa de Ayuda Front\\Front-end-728963e443877477536b5c628cd6d800a198e819\\node_modules\\crypto-js|crypto"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { AppComponent } from './app.component';\nimport { PrincipalComponent } from './components/indexPrincipal/principal.component';\nconst routes: Routes = [\n  { path: '', component: PrincipalComponent ,\n  children: [{\n    path: '',\n    component: LoginComponent,\n  }]},\n\n  {\n    path: 'home',\n    component: AppComponent, // se agrega para jalar los componentes de layout (hace la misma funcion que app.N)\n    children: [\n      {\n        path: 'inicio',\n        loadChildren: () => import('./main/main.module').then(x => x.MainModule)\n      },\n     \n    ]\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes,{\n    useHash:false\n  })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ticket-digital';\n}\n","<router-outlet></router-outlet>","\nimport { AppRoutingModule } from './app-routing.module';\nimport {AvatarModule} from 'primeng/avatar';\nimport { SharedModule } from './shared.module';\nimport { LoginComponent } from './components/login/login.component';\nimport { InputTextModule } from 'primeng/inputtext';\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UsuarioService } from './service/usuario.service';\nimport { SidebarModule } from 'primeng/sidebar';\nimport { ButtonModule } from 'primeng/button';\nimport { MenuModule } from 'primeng/menu';\nimport {CheckboxModule} from 'primeng/checkbox';\nimport {CalendarModule} from 'primeng/calendar';\nimport {SliderModule} from 'primeng/slider';\nimport {MultiSelectModule} from 'primeng/multiselect';\nimport {ContextMenuModule} from 'primeng/contextmenu';\nimport {DialogModule} from 'primeng/dialog';\nimport {DropdownModule} from 'primeng/dropdown';\nimport {ProgressBarModule} from 'primeng/progressbar';\nimport {FileUploadModule} from 'primeng/fileupload';\nimport {RatingModule} from 'primeng/rating';\nimport {RadioButtonModule} from 'primeng/radiobutton';\nimport {InputNumberModule} from 'primeng/inputnumber';\n\nimport { InputTextareaModule } from 'primeng/inputtextarea';\n\nimport { RippleModule } from 'primeng/ripple';\nimport { SlideMenuModule } from 'primeng/slidemenu';\nimport {ToolbarModule} from 'primeng/toolbar';\nimport {SplitButtonModule} from 'primeng/splitbutton';\nimport { ToastModule } from 'primeng/toast';\nimport {TableModule} from 'primeng/table';\nimport { CustomerService } from './service/CustomerService';\nimport { AreaService } from './service/Area.service';\nimport { PrincipalComponent } from './components/indexPrincipal/principal.component';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\n@NgModule({\n  declarations: [\n\n    LoginComponent,\n    PrincipalComponent,\n    \n   \n  ],\n  imports: [\n    BrowserModule,\n    CommonModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    SharedModule,\n    SidebarModule,\n    InputTextModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ButtonModule,\n    MenuModule,\n    RippleModule,\n    SlideMenuModule,\n    ToolbarModule,\n    AvatarModule,\n    SplitButtonModule,\n    ToastModule,\n    TableModule,\n    CalendarModule,\n    SliderModule,\n    MultiSelectModule,\n    ContextMenuModule,\n    DialogModule,\n    DropdownModule,\n    ProgressBarModule,\n    FileUploadModule,\n    RatingModule,\n    RadioButtonModule,\n    InputNumberModule,\n    InputTextareaModule,\n    CheckboxModule\n\n  ],\n  providers: [\n    UsuarioService,\n    CustomerService,\n    AreaService\n  ],\n  bootstrap: [PrincipalComponent],\n  exports: [FormsModule,\n    ReactiveFormsModule]\n    \n})\nexport class AppModule {\n}\n","import { Component} from \"@angular/core\";\n\n@Component({\n  selector: 'app-principal',\n  templateUrl: './principal.html',\n})\n\nexport class PrincipalComponent {\n \n}\n","<router-outlet></router-outlet>","import { Component,OnInit, ViewChild} from '@angular/core';\nimport {MenuItem} from 'primeng/api';\nimport { Usuario } from '../model/usuario.model';\nimport { AlertaComponent } from '../../util/alerta.component';\nimport { authGuardService } from '../../service/auth-guard.service';\nimport { UsuarioService } from '../../service/usuario.service';\n\n\n@Component({\n  selector: 'inicio',\n  templateUrl: './inicio.component.html',\n})\nexport class InicioComponent {\n  @ViewChild(AlertaComponent, { static: false }) mensajeAlerta!: AlertaComponent;\n  items!: MenuItem[];\n  token : string;\n  usuarios !: Usuario[];\n  sesionUsuario !: Usuario;\n  constructor(\n\n    public _authGuardService: authGuardService,\n    private authService: UsuarioService,\n    public _auth: authGuardService\n    \n    ) {\n      this.token = this._authGuardService.getToken();\n      this.sesionUsuario = this._authGuardService.getUser();\n\n    }\n\n  get auth(){\n    return this.authService.auth;\n    \n  }\n  ngOnInit() {\n      this.items = [\n        \n          {label: 'Perfil', icon: 'pi pi-user', routerLink: ['perfil'] },\n          {separator:true},\n          {label: 'Exit', icon: 'pi pi-sign-out' , command: () => this.logout() , routerLink: [''] }\n          \n      ];\n  }\n  logout() {\n    \n    this._auth.logout()\n  }\n\n}\n\n","\n<nav class=\"\">\n    <div class=\"flex align-items-center justify-content-between\">\n        <div>\n            <app-menu></app-menu>\n            \n        </div>\n        <span>Nombre: {{auth.nombre}}</span>\n        <div class=\"flex-inline\">\n            <p-avatar shape=\"circle\" icon=\"pi pi-user\" pBadge value=\"4\" severity=\"success\" styleClass=\"mr-2\"\n            [style]=\"{'background-color':'#E30521','opacity':'0.2;', 'color': '#ffffff'}\" size=\"large\">\n        </p-avatar>\n            <p-splitButton label=\"Cuenta\" [model]=\"this.items\" styleClass=\"p-button-text p-button-danger mr-2 mb-2 \">  \n            </p-splitButton>\n        </div>\n        \n    </div>\n</nav>\n\n<div>\n    <div *ngIf=\"sesionUsuario.clave== 'ADM' ||   sesionUsuario.clave == 'TEC'\">\n     <!--  <app-table-ticket></app-table-ticket>--> \n    </div>\n</div>\n<app-alerta></app-alerta>\n<div>\n    <div *ngIf=\"sesionUsuario.clave== 'ADM' ||   sesionUsuario.clave == 'TEC'\"></div>\n</div>\n\n<router-outlet></router-outlet>\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { MessageService } from \"primeng/api\";\nimport { loginUsuario } from \"src/app/components/model/login.model\";\nimport { RespuestaDto } from \"src/app/components/model/respuestaDto\";\nimport { Usuario } from \"src/app/components/model/usuario.model\";\nimport { authGuardService } from \"src/app/service/auth-guard.service\";\nimport { UsuarioService } from \"src/app/service/usuario.service\";\nimport { AlertaComponent } from \"src/app/util/alerta.component\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\n\nexport class LoginComponent {\n  @ViewChild(AlertaComponent, { static: false }) mensajeAlerta!: AlertaComponent;\n\n  constructor(\n     private _formBuilder: FormBuilder,\n     private messageService: MessageService,\n     private _usuarioService: UsuarioService,\n     public _authGuardService: authGuardService,\n     private router: Router\n\n     ) {}\n  usuarioVacio !:boolean;\n  contrasenaVacia !:boolean;\n  usuario!: Usuario;\n \n    loginForm = this._formBuilder.group({\n    usuarioLogin:  ['',[Validators.required, Validators.minLength(1)]],\n    contrasenaLogin: ['',[Validators.required, Validators.maxLength(15)]]\n\n  });\n  fnLogueo(){\n    console.log(\"this.loginForm\",this.loginForm.value)\n    if(this.loginForm.invalid){\n      this.messageService.add({severity:'error', summary:'No es posible acceder', detail:'Porfavor verifique todos los campos'});\n    }else{\n      console.log(\"this.loginForm.value.usuarioLogin\", this.loginForm.value.usuarioLogin)\n       this.iniciarSesion( this.loginForm.value.usuarioLogin , this.loginForm.value.contrasenaLogin);\n    }\n  }\n\n  get form(): { [key: string]: AbstractControl } {\n    return this.loginForm.controls;\n  }\n  \n  async iniciarSesion(usuario : string  | undefined | null, contrasena : string  | undefined | null) {\n    console.log(\"usuario\", usuario , \"contrasena\" , contrasena);\n    \n    let datosInicioSesion = new loginUsuario(usuario , contrasena );\n    console.log(\"datosSesion\", datosInicioSesion);\n    this._usuarioService.iniciarSesion(datosInicioSesion ).subscribe({\n      next : (resp: RespuestaDto)  => {\n      \n        let respuestaDto = <RespuestaDto>resp;\n        if (respuestaDto.valido == 0) {\n          console.log(\"next\", respuestaDto.mensaje)\n          this.messageService.add({severity:'error', summary:'Error', detail:respuestaDto.mensaje});\n        } else {\n\n          this.usuario = <Usuario>respuestaDto.addenda;\n\n          // this.obtenerMenu(respuestaDto.token , this.usuario);\n          this._authGuardService.sendToken(this.usuario);\n          this._authGuardService.sendKey(respuestaDto.token);\n          this.router.navigate([\"/home/inicio/main/Ticket\"]);\n        } // if\n        \n      },\n        error : (error) => {\n          let mensaje = <any>error;\n          this.mensajeAlerta.alerta(\"AVISO\", \"\", mensaje.message, \"\");\n        }\n      });\n     \n  }\n}\n","\n\n<section   *ngIf=\"!_authGuardService.isLoggednIn()\"  id=\"wrapper\">\n    <div  class=\"fondo-imagen\">\n        <div class=\"login-box \">\n            <div class=\"login-card tamano560 \">\n                <h3 class=\"box-title m-b-20 text-center\">Iniciar Sesión</h3>\n                  \n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"fnLogueo()\">\n                    <div class=\"field \">\n                        <label for=\"loginUsuario\">Usuario</label>\n                        <input\n                          id=\"usuarioLogin\"\n                          formControlName=\"usuarioLogin\"\n                          class=\" p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"\n                          pInputText style=\"background: #9c9b9b54;\"\n                        />\n\n                        <div *ngIf=\"loginForm.touched && loginForm.invalid\" >\n                         \n                          <small *ngIf=\"form['usuarioLogin'].errors?.['required']\" id=\"blErrorUsuarioLogin\" class=\"p-error\"\n                          >El campo usuario se encuentra vacío.</small>\n                          <small *ngIf=\"loginForm.controls.usuarioLogin.errors?.['minlength']\" id=\"lblLongUsername\" class=\"p-error\">El usuario debe de ser de minimo 3 caracteres</small>\n                        </div>\n                        \n                      </div>\n                    \n                      <div class=\"field\">\n                        <label for=\"lblLoginContrasena\">Contraseña</label>\n                        <input\n                          id=\"idLoginContrasena\"\n                          formControlName=\"contrasenaLogin\"\n                          class=\"p-2 border-1 border-solid surface-border border-round appearance-none outline-none focus:border-primary w-full\"\n                          pInputText style=\"background: #9c9b9b54;\"\n                          type=\"password\"\n                        />\n                        <div *ngIf=\"loginForm.touched && loginForm.invalid\" >\n                            <small *ngIf=\"loginForm.controls.contrasenaLogin.errors?.['required']\"  id=\"lblErrcontrasenaLogin\" class=\" p-error \"\n                              >El campo contraseña se encuentra vacío.</small>\n                              <small *ngIf=\"loginForm.controls.contrasenaLogin.errors?.['maxlength']\"  id=\"lblErrcontrasenaLogin\" class=\" p-error \"\n                              >La contraseña es demaciado larga.</small>\n                        </div>\n                        \n                      </div>\n                      <div class=\"form-group text-center m-t-20\">\n                        <div class=\"col-xs-12\">\n                            <button pButton class=\"p-button-danger\" (click)=\"fnLogueo()\" type=\"button\">Iniciar sesión</button>\n                        </div>\n                    </div>\n                </form>\n                    \n\n              </div>\n        </div>\n\n    </div>\n    \n</section>\n\n<p-toast position=\"top-right\"></p-toast>\n<app-alerta></app-alerta>","\nimport { Component, OnInit } from '@angular/core';\nimport { PrimeNGConfig } from 'primeng/api';\nimport { MenuItem } from 'primeng/api';\nimport { Usuario } from '../model/usuario.model';\nimport { authGuardService } from '../../service/auth-guard.service';\n\n@Component({\n   selector: 'app-menu',\n   templateUrl: './menu.component.html',\n})\nexport class MenuComponent implements OnInit {\n\n   visibleSidebar1: boolean = false;\n   items: MenuItem[] = new Array();\n   sesionUsuario !: Usuario;\n\n   constructor(\n      private primengConfig: PrimeNGConfig,\n      public _authGuardService: authGuardService) {\n      this.sesionUsuario = this._authGuardService.getUser();\n   }\n   ngOnInit() {\n      this.obtenerMenu();\n      console.log(\"this.sesionUsuario \", this.sesionUsuario);\n\n   }\n\n   obtenerMenu() {\n      this.primengConfig.ripple = true;\n      console.log(\"this.sesionUsuario.descripcion_rol \", this.sesionUsuario.clave);\n\n\n      this.items.push(\n         {\n            label: 'Solicitudes',\n            icon: 'pi pi-fw pi-file',\n            routerLink: ['solicitudes']\n         },\n         {\n            label: 'Tikets',\n            icon: 'pi pi-inbox',\n            routerLink: ['Ticket']\n         }\n      );\n      if (this.sesionUsuario.clave === 'TEC' || this.sesionUsuario.clave === 'ADM') {\n         this.items.push(\n\n            {\n               label: 'Reasignacion',\n               icon: ' pi pi-sync',\n               routerLink: ['reasignacion']\n            },\n            {\n               label: 'Utilerías',\n               icon: 'pi pi-file-import',\n               items: [\n                  {\n                     label: 'Usuarios',\n                     icon: 'pi pi-fw pi-user',\n                     routerLink: ['Tusuario']\n                  },\n                  {\n                     label: 'Lugar y Area',\n                     icon: 'pi pi-map-marker',\n                     routerLink: ['lugarArea']\n                  },\n                  {\n                     label: 'Activos',\n                     icon: 'pi pi-desktop',\n                     routerLink: ['Tactivos']\n                  },\n                  {\n                     label: 'Licencia',\n                     icon: 'pi pi-microsoft'\n                  },\n               ]\n            },\n            {\n               label: 'Inventario',\n               icon: 'pi pi-chart-pie'\n            },\n            {\n               label: 'Reportes',\n               icon: 'pi pi-chart-bar'\n            },\n            {\n               label: 'Nuevo Activo ',\n               icon: 'pi pi-chart-bar',\n               routerLink: ['NuevoActivo']\n            },\n         )\n      }\n   }\n}\n","<p-sidebar [(visible)]=\"visibleSidebar1\" [baseZIndex]=\"10000\" [showCloseIcon]=\"false\">\n    <div class=\"text-center\">\n       <img src=\"../../../assets/images/big/icon-LB.PNG\" alt=\"\" width=\"40%\">\n        <h1 class=\"p-3\">Bienvenido</h1>\n        <hr>\n    </div>\n\n    <p-slideMenu [model]=\"items\" [viewportHeight]=\"300\">\n    </p-slideMenu>\n\n</p-sidebar>\n\n<p-button type=\"button\" (click)=\"visibleSidebar1 = true\" icon=\"pi pi-align-justify\">\n</p-button>\n","export class loginUsuario{\n    constructor(\n        public username : string  | undefined | null,\n        public nip : string  | undefined | null\n    ){}\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport  { environment }  from '../../environments/environment';\nimport { RespuestaDto } from '../components/model/respuestaDto';\nimport { lugarAreas } from '../components/model/lugarArea.model';\nimport { UtilApiService } from './util-api.service';\nimport { Observable } from 'rxjs';\nimport { insertArea } from '../components/model/insertArea'\n@Injectable()\nexport class AreaService {\n    public url: string;\n\n\n    constructor(\n        private _http: HttpClient,\n        private _apiService : UtilApiService\n        ) {\n        this.url = environment.url;   \n    }\n    saveArea(datosA : insertArea): Observable<RespuestaDto> {\n        console.log(\"*******-> asave area\",datosA)\n        return this._apiService.sendPostRequest(datosA, this.url + \"area/post\");\n    }// Post area\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { RespuestaDto } from '../components/model/respuestaDto';\nimport { Observable } from 'rxjs';\nimport { UtilApiService } from './util-api.service';\nimport { environment } from 'src/environments/environment';\nimport { insertTicket } from '../components/model/insertTicket';\n@Injectable()\n\nexport class CustomerService {\n    public url: string;\n    constructor(\n        private http: HttpClient, \n        private _apiService : UtilApiService\n        ){\n            this.url = environment.url;\n        }\n\n        fnusuario(token:string): Observable<RespuestaDto> {\n            return this._apiService.sendGetRequest(this.url + \"usuario/getUsuarios\",token);\n        }\n        getTicket(token:string): Observable<RespuestaDto> {\n            return this._apiService.sendGetRequest(this.url + \"ticket/getticket\",token);\n        }\n        getActivos(token:string): Observable<RespuestaDto> {\n            return this._apiService.sendGetRequest(this.url + \"activos/getActivos\",token);\n        }\n        getArea(token:string): Observable<RespuestaDto> {\n            return this._apiService.sendGetRequest(this.url + \"area/getarea\",token);\n        }\n        getLugar(token:string): Observable<RespuestaDto> {\n            return this._apiService.sendGetRequest(this.url + \"lugar/get\",token);\n        }\n        getRol(token:string): Observable<RespuestaDto> {\n            return this._apiService.sendGetRequest(this.url + \"rol/get\",token);\n        }\n        \n        saveTicket(datosT : insertTicket): Observable<RespuestaDto> {\n            return this._apiService.sendPostRequest(datosT, this.url + \"ticket/post\");\n        }// Post usuario\n    }\n        \n        \n        \n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Router } from '@angular/router';\nimport { LocalService } from '../service/local.service';\n@Injectable()\n\nexport class authGuardService {\n  public url: string;\n  constructor(\n    private http: HttpClient,\n    private router: Router,\n    private localService: LocalService\n  ) {\n    this.url = environment.url;\n\n  }\n\n\n  async sendToken(usr: any) {\n    if (usr) {\n      let usuario = await this.localService.setJsonValue('LoggedInUser', usr);\n      //localStorage.setItem(\"LoggedInUser\", usr)\n    }\n\n  }\n  async sendKey(key: string) {\n    let llave = await this.localService.setJsonValue('token', key);\n    //localStorage.setItem(\"token\", key)\n  }\n  getUser() {\n\n    return this.localService.getJsonValue('LoggedInUser');\n    //return JSON.parse(localStorage.getItem('LoggedInUser'));\n  }\n  getToken() {\n    return this.localService.getJsonValue('token');\n    // return localStorage.getItem('token');\n  }\n  getPermisos() {\n    return this.localService.getJsonValue('permisos');\n    //return JSON.parse(localStorage.getItem('permisos'));\n  }\n  isLoggednIn() {\n    return this.getToken() !== null;\n  }\n  logout() {\n    return this.localService.clearToken();\n    //localStorage.removeItem(\"LoggedInUser\")\n    //  localStorage.clear();\n    this.router.navigate([\"/\"]);\n  }\n  sendPerfilMenu(perfil : any){\n    this.localService.setJsonValue('permisos', perfil);\n  }\n\n\n}\n\n\n\n\n","import { Injectable } from '@angular/core';\nimport { StorageService } from './storage.services';\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalService {\n \n  constructor(private storageService: StorageService) { }\n  // Set the json data to local \n  setJsonValue(key: string, value: any) {\n    this.storageService.secureStorage.setItem(key, value);\n  }\n  // Get the json value from local \n  getJsonValue(key: string) {\n    return this.storageService.secureStorage.getItem(key);\n  }// Clear the local \n  clearToken() {\n    return this.storageService.secureStorage.clear();\n  }\n}","import * as CryptoJS from 'crypto-js';\n \nimport { Injectable } from '@angular/core';\n \nconst SecureStorage = require('secure-web-storage');\nconst SECRET_KEY = 'Ber1g0';\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n \n  constructor() { }\n  public secureStorage = new SecureStorage(localStorage, {\n    hash: function hash(key : any) {\n      key = CryptoJS.SHA256(key, {SECRET_KEY});\n \n      return key.toString();\n    },\n    encrypt: function encrypt(data : any) {\n      data = CryptoJS.AES.encrypt(data, SECRET_KEY);\n \n      data = data.toString();\n \n      return data;\n    },\n    decrypt: function decrypt(data : any) {\n      data = CryptoJS.AES.decrypt(data, SECRET_KEY);\n \n      data = data.toString(CryptoJS.enc.Utf8);\n \n      return data;\n    }\n  });\n \n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport  { environment }  from '../../environments/environment';\nimport { RespuestaDto } from '../components/model/respuestaDto';\nimport { loginUsuario } from '../components/model/login.model';\nimport { UtilApiService } from './util-api.service';\nimport { Observable } from 'rxjs';\nimport {Usuario} from '../components/model/usuario.model';\nimport { map, tap } from 'rxjs/operators';\nimport { insertUsuario } from '../components/model/insertUsuario';\n@Injectable({\n    providedIn: 'root'\n  })\nexport class UsuarioService {\n\n    public url: string;\n    private _auth: Usuario | undefined;\n    get auth(): Usuario {\n        return { ...this._auth! }\n    }\n\n    constructor(\n        private _http: HttpClient,\n        private _apiService : UtilApiService\n        \n        ) {\n        this.url = environment.url;   \n    }\n \n \n \n    iniciarSesion(datosInicioSesion : loginUsuario ): Observable<RespuestaDto> {\n        return this._apiService.sendPostRequest(datosInicioSesion , this.url + 'iniciarSesion/iniciarSesion')\n        .pipe(\n            tap(auth => this._auth = auth.addenda)\n\n        )\n    } // IniciarSesion\n    fnusuario(token:string): Observable<RespuestaDto> {\n        return this._apiService.sendGetRequest(this.url + \"usuario/getUsuarios\",token);\n       \n    } //get Usuario\n\n        saveUsuario(datosA : insertUsuario): Observable<RespuestaDto> {\n        return this._apiService.sendPostRequest(datosA, this.url + \"usuario/post\");\n    }// Post usuario\n}","import { Injectable } from \"@angular/core\";\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { RespuestaDto } from '../components/model/respuestaDto';\n\n@Injectable()\nexport class UtilApiService {\n\n    constructor(private _http: HttpClient) {}\n    public sendPostRequest(aEnviar: any, url: string): Observable<any> {\n        let json = JSON.stringify(aEnviar);\n        let params = \"json=\" + json;\n        let headers = new HttpHeaders().set('Content-Type', 'application/json');\n        return this._http.post(url, json, { headers: headers });\n    } // sendPostRequest\n\n    public sendGetRequest( url: string , token: any): Observable<any> {\n        let headers = new HttpHeaders({ 'Content-Type': 'application/json', 'authorization': ': ' + token + '' });\n        return this._http.get<RespuestaDto>(url, { headers: headers });\n    } // sendGetRequest\n  \n}","\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { ButtonModule } from 'primeng/button';\nimport { CardModule } from 'primeng/card';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { CalendarModule } from \"primeng/calendar\";\nimport { ChipsModule } from \"primeng/chips\";\nimport { DropdownModule } from \"primeng/dropdown\";\nimport { InputMaskModule } from \"primeng/inputmask\";\nimport { InputNumberModule } from \"primeng/inputnumber\";\nimport { CascadeSelectModule } from \"primeng/cascadeselect\";\nimport { MultiSelectModule } from \"primeng/multiselect\";\nimport { InputTextareaModule } from \"primeng/inputtextarea\";\nimport { AutoCompleteModule } from \"primeng/autocomplete\";\nimport { ToastModule } from 'primeng/toast';\n\nimport { MessageService, ConfirmationService } from \"primeng/api\";\nimport { AlertaComponent } from \"./util/alerta.component\";\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgModule } from \"@angular/core\";\nimport { authGuardService } from \"./service/auth-guard.service\";\nimport { LocalService } from \"./service/local.service\";\nimport { UtilApiService } from \"./service/util-api.service\";\nimport { InicioComponent } from \"./components/inicio/inicio.component\";\nimport { ToolbarModule } from \"primeng/toolbar\";\nimport { ContextMenuModule } from \"primeng/contextmenu\";\nimport { DialogModule } from \"primeng/dialog\";\nimport { FileUploadModule } from \"primeng/fileupload\";\nimport { ProgressBarModule } from \"primeng/progressbar\";\nimport { RadioButtonModule } from \"primeng/radiobutton\";\nimport { RatingModule } from \"primeng/rating\";\nimport { MenuComponent } from \"./components/menu/menu.component\";\nimport { AvatarModule } from \"primeng/avatar\";\nimport { SplitButtonModule } from \"primeng/splitbutton\";\nimport { SidebarModule } from \"primeng/sidebar\";\n\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { MenuModule } from \"primeng/menu\";\nimport { RippleModule } from \"primeng/ripple\";\nimport { TableModule } from \"primeng/table\";\nimport { SlideMenuModule } from \"primeng/slidemenu\";\nimport {MenuItem} from 'primeng/api';\nimport {MegaMenuItem} from 'primeng/api';\nimport { RouterModule } from \"@angular/router\";\nimport { CommonModule } from '@angular/common';\nimport {StepsModule} from 'primeng/steps';\n\n@NgModule({\n  declarations: [\n    AlertaComponent,\n    InicioComponent,\n    MenuComponent\n  ],\n  imports: [\n    RouterModule,\n    ConfirmDialogModule,\n    SidebarModule,\n    SlideMenuModule,\n    SplitButtonModule,\n    AvatarModule,\n    ToolbarModule,\n    CommonModule\n  ],\n  exports: [\n    InicioComponent,\n    MenuComponent,\n    ButtonModule,\n    CardModule,\n    InputTextModule,\n    AutoCompleteModule,\n    FormsModule,\n    HttpClientModule,\n    CalendarModule,\n    ChipsModule,\n    DropdownModule,\n    InputMaskModule,\n    InputNumberModule,\n    CascadeSelectModule,\n    MultiSelectModule,\n    InputTextareaModule,\n    InputTextModule,\n    ToastModule,\n    AlertaComponent,\n    ConfirmDialogModule,\n    ToolbarModule,\n\n    ContextMenuModule,\n    DialogModule,\n    ProgressBarModule,\n    FileUploadModule,\n    RatingModule,\n    RadioButtonModule,\n    AvatarModule,\n    SplitButtonModule,\n    SidebarModule,\n    SlideMenuModule,\n    ReactiveFormsModule,\n    MenuModule,\n    RippleModule,\n    TableModule,\n    StepsModule\n    \n\n\n\n  ],\n  providers: [MessageService, \n    ConfirmationService, \n    authGuardService,\n     LocalService,\n      LocalService, UtilApiService],\n  bootstrap: []\n})\nexport class SharedModule { }\n","\n\n\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ConfirmationService } from 'primeng/api';\n\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-alerta',\n  template: `<p-confirmDialog ></p-confirmDialog>`,\n   providers: [ConfirmationService]\n})\nexport class AlertaComponent implements OnInit {\n\n  constructor( private _confirmationService: ConfirmationService, private router: Router ) { }\n\n  ngOnInit() {\n    \n  }\n\n  alerta( header: string, titulo: string, mensaje: string, campo: string ) :void  {\n    this._confirmationService.confirm({\n        message: mensaje,\n        header: header,\n        acceptLabel: 'Cierra',\n        accept: () => { this.cierraModal( campo ); }\n    });\n  }\n\n  exito( header: string, titulo: string, mensaje: string, campo: string, redirect:string ) :void  {\n    this._confirmationService.confirm({\n        message: mensaje,\n        header: header,\n        acceptLabel: 'Ingresar',\n        accept: () => { this.redirectModal( redirect ); }\n    });\n  }\n  \n  \n  error( header: string, titulo: string, mensaje: string, campo: string ) :void  {\n    this._confirmationService.confirm({\n        message: mensaje,\n        header: header,\n        acceptLabel: 'Aceptar',\n        accept: () => { this.cierraModal( campo ); }\n    });\n  }\n\n  public cierraModal( campo: string): void {\n    if ( !campo || campo == '' ) {\n      campo = 'no';\n    }\n    campo = \"#\" + campo;\n    setTimeout(function() { $(campo).focus() },10);\n  }\n\n  \n  public redirectModal(redirect: string){\n    if(redirect == \"1\"){\n      this.router.navigate(['/login']);\n    }\n  }\n  \n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  url: 'http://localhost:5013/'\n};\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"names":["RouterModule","LoginComponent","AppComponent","PrincipalComponent","routes","path","component","children","loadChildren","then","x","MainModule","AppRoutingModule","forRoot","useHash","imports","exports","constructor","selectors","decls","vars","template","i0","AvatarModule","SharedModule","InputTextModule","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","UsuarioService","SidebarModule","ButtonModule","MenuModule","CheckboxModule","CalendarModule","SliderModule","MultiSelectModule","ContextMenuModule","DialogModule","DropdownModule","ProgressBarModule","FileUploadModule","RatingModule","RadioButtonModule","InputNumberModule","InputTextareaModule","RippleModule","SlideMenuModule","ToolbarModule","SplitButtonModule","ToastModule","TableModule","CustomerService","AreaService","CommonModule","BrowserModule","AppModule","bootstrap","declarations","AlertaComponent","InicioComponent","_authGuardService","authService","_auth","token","getToken","sesionUsuario","getUser","auth","ngOnInit","items","label","icon","routerLink","separator","command","logout","viewQuery","Validators","loginUsuario","_formBuilder","messageService","_usuarioService","router","group","usuarioLogin","required","minLength","contrasenaLogin","maxLength","fnLogueo","console","log","loginForm","value","invalid","add","severity","summary","detail","iniciarSesion","form","controls","usuario","contrasena","datosInicioSesion","subscribe","next","resp","respuestaDto","valido","mensaje","addenda","sendToken","sendKey","navigate","error","mensajeAlerta","alerta","message","MenuComponent","primengConfig","Array","obtenerMenu","ripple","clave","push","consts","username","nip","environment","_http","_apiService","url","saveArea","datosA","sendPostRequest","factory","http","fnusuario","sendGetRequest","getTicket","getActivos","getArea","getLugar","getRol","saveTicket","datosT","authGuardService","localService","usr","setJsonValue","key","llave","getJsonValue","getPermisos","isLoggednIn","clearToken","sendPerfilMenu","perfil","LocalService","storageService","secureStorage","setItem","getItem","clear","providedIn","CryptoJS","SecureStorage","require","SECRET_KEY","StorageService","localStorage","hash","SHA256","toString","encrypt","data","AES","decrypt","enc","Utf8","tap","pipe","saveUsuario","HttpHeaders","UtilApiService","aEnviar","json","JSON","stringify","params","headers","set","post","get","HttpClientModule","CardModule","ChipsModule","InputMaskModule","CascadeSelectModule","AutoCompleteModule","MessageService","ConfirmationService","ConfirmDialogModule","StepsModule","_confirmationService","header","titulo","campo","confirm","acceptLabel","accept","cierraModal","exito","redirect","redirectModal","setTimeout","$","focus","features","production","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}